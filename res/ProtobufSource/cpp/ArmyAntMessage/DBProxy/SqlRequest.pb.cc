// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ArmyAntMessage/DBProxy/SqlRequest.proto

#include "ArmyAntMessage/DBProxy/SqlRequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SqlDatabaseInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SqlHeadOne_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SqlRow_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SqlTableInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto;
namespace ArmyAntMessage {
namespace DBProxy {
class SqlHeadOneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SqlHeadOne> _instance;
} _SqlHeadOne_default_instance_;
class SqlRowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SqlRow> _instance;
} _SqlRow_default_instance_;
class SqlDatabaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SqlDatabaseInfo> _instance;
} _SqlDatabaseInfo_default_instance_;
class SqlTableInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SqlTableInfo> _instance;
} _SqlTableInfo_default_instance_;
class SqlResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SqlResult> _instance;
} _SqlResult_default_instance_;
class Any2Dbp_SqlRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Any2Dbp_SqlRequest> _instance;
} _Any2Dbp_SqlRequest_default_instance_;
}  // namespace DBProxy
}  // namespace ArmyAntMessage
static void InitDefaultsSqlHeadOne_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ArmyAntMessage::DBProxy::_SqlHeadOne_default_instance_;
    new (ptr) ::ArmyAntMessage::DBProxy::SqlHeadOne();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ArmyAntMessage::DBProxy::SqlHeadOne::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SqlHeadOne_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSqlHeadOne_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto}, {}};

static void InitDefaultsSqlRow_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ArmyAntMessage::DBProxy::_SqlRow_default_instance_;
    new (ptr) ::ArmyAntMessage::DBProxy::SqlRow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ArmyAntMessage::DBProxy::SqlRow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SqlRow_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSqlRow_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto}, {}};

static void InitDefaultsSqlDatabaseInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ArmyAntMessage::DBProxy::_SqlDatabaseInfo_default_instance_;
    new (ptr) ::ArmyAntMessage::DBProxy::SqlDatabaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ArmyAntMessage::DBProxy::SqlDatabaseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SqlDatabaseInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSqlDatabaseInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto}, {}};

static void InitDefaultsSqlTableInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ArmyAntMessage::DBProxy::_SqlTableInfo_default_instance_;
    new (ptr) ::ArmyAntMessage::DBProxy::SqlTableInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ArmyAntMessage::DBProxy::SqlTableInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SqlTableInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSqlTableInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto}, {
      &scc_info_SqlDatabaseInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base,}};

static void InitDefaultsSqlResult_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ArmyAntMessage::DBProxy::_SqlResult_default_instance_;
    new (ptr) ::ArmyAntMessage::DBProxy::SqlResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ArmyAntMessage::DBProxy::SqlResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SqlResult_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSqlResult_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto}, {
      &scc_info_SqlTableInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base,
      &scc_info_SqlHeadOne_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base,
      &scc_info_SqlRow_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base,}};

static void InitDefaultsAny2Dbp_SqlRequest_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ArmyAntMessage::DBProxy::_Any2Dbp_SqlRequest_default_instance_;
    new (ptr) ::ArmyAntMessage::DBProxy::Any2Dbp_SqlRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ArmyAntMessage::DBProxy::Any2Dbp_SqlRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Any2Dbp_SqlRequest_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAny2Dbp_SqlRequest_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto}, {}};

void InitDefaults_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_SqlHeadOne_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SqlRow_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SqlDatabaseInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SqlTableInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SqlResult_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Any2Dbp_SqlRequest_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto[6];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlHeadOne, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlHeadOne, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlHeadOne, catalogname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlHeadOne, columnname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlHeadOne, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlHeadOne, allownumm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlHeadOne, autoincrease_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlRow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlRow, fields_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlDatabaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlDatabaseInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlDatabaseInfo, server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlDatabaseInfo, charset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlDatabaseInfo, sortrule_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlTableInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlTableInfo, tablename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlTableInfo, engine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlTableInfo, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlTableInfo, database_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlResult, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlResult, heads_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::SqlResult, rows_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::Any2Dbp_SqlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::Any2Dbp_SqlRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::DBProxy::Any2Dbp_SqlRequest, tablename_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ArmyAntMessage::DBProxy::SqlHeadOne)},
  { 11, -1, sizeof(::ArmyAntMessage::DBProxy::SqlRow)},
  { 17, -1, sizeof(::ArmyAntMessage::DBProxy::SqlDatabaseInfo)},
  { 26, -1, sizeof(::ArmyAntMessage::DBProxy::SqlTableInfo)},
  { 35, -1, sizeof(::ArmyAntMessage::DBProxy::SqlResult)},
  { 43, -1, sizeof(::ArmyAntMessage::DBProxy::Any2Dbp_SqlRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ArmyAntMessage::DBProxy::_SqlHeadOne_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ArmyAntMessage::DBProxy::_SqlRow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ArmyAntMessage::DBProxy::_SqlDatabaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ArmyAntMessage::DBProxy::_SqlTableInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ArmyAntMessage::DBProxy::_SqlResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ArmyAntMessage::DBProxy::_Any2Dbp_SqlRequest_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto = {
  {}, AddDescriptors_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto, "ArmyAntMessage/DBProxy/SqlRequest.proto", schemas,
  file_default_instances, TableStruct_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto::offsets,
  file_level_metadata_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto, 6, file_level_enum_descriptors_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto, file_level_service_descriptors_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto = {
  false, InitDefaults_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto, 
  "\n\'ArmyAntMessage/DBProxy/SqlRequest.prot"
  "o\022\026ArmyAntMessage.DBProxy\"|\n\nSqlHeadOne\022"
  "\016\n\006length\030\001 \001(\005\022\023\n\013catalogName\030\002 \001(\t\022\022\n\n"
  "columnName\030\003 \001(\t\022\014\n\004type\030\004 \001(\005\022\021\n\tallowN"
  "umm\030\005 \001(\010\022\024\n\014autoIncrease\030\006 \001(\010\"\030\n\006SqlRo"
  "w\022\016\n\006fields\030\001 \003(\t\"R\n\017SqlDatabaseInfo\022\014\n\004"
  "name\030\001 \001(\t\022\016\n\006server\030\002 \001(\t\022\017\n\007charset\030\003 "
  "\001(\t\022\020\n\010sortRule\030\004 \001(\t\"}\n\014SqlTableInfo\022\021\n"
  "\ttableName\030\005 \001(\t\022\016\n\006engine\030\006 \001(\t\022\017\n\007comm"
  "ent\030\007 \001(\t\0229\n\010database\030\010 \001(\0132\'.ArmyAntMes"
  "sage.DBProxy.SqlDatabaseInfo\"\241\001\n\tSqlResu"
  "lt\0223\n\005table\030\001 \001(\0132$.ArmyAntMessage.DBPro"
  "xy.SqlTableInfo\0221\n\005heads\030\002 \003(\0132\".ArmyAnt"
  "Message.DBProxy.SqlHeadOne\022,\n\004rows\030\003 \003(\013"
  "2\036.ArmyAntMessage.DBProxy.SqlRow\"5\n\022Any2"
  "Dbp_SqlRequest\022\014\n\004type\030\001 \001(\005\022\021\n\ttableNam"
  "e\030\002 \001(\tb\006proto3"
,
  "ArmyAntMessage/DBProxy/SqlRequest.proto", &assign_descriptors_table_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto, 655,
};

void AddDescriptors_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto = []() { AddDescriptors_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto(); return true; }();
namespace ArmyAntMessage {
namespace DBProxy {

// ===================================================================

void SqlHeadOne::InitAsDefaultInstance() {
}
class SqlHeadOne::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SqlHeadOne::kLengthFieldNumber;
const int SqlHeadOne::kCatalogNameFieldNumber;
const int SqlHeadOne::kColumnNameFieldNumber;
const int SqlHeadOne::kTypeFieldNumber;
const int SqlHeadOne::kAllowNummFieldNumber;
const int SqlHeadOne::kAutoIncreaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SqlHeadOne::SqlHeadOne()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArmyAntMessage.DBProxy.SqlHeadOne)
}
SqlHeadOne::SqlHeadOne(const SqlHeadOne& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  catalogname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.catalogname().size() > 0) {
    catalogname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.catalogname_);
  }
  columnname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.columnname().size() > 0) {
    columnname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.columnname_);
  }
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&autoincrease_) -
    reinterpret_cast<char*>(&length_)) + sizeof(autoincrease_));
  // @@protoc_insertion_point(copy_constructor:ArmyAntMessage.DBProxy.SqlHeadOne)
}

void SqlHeadOne::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SqlHeadOne_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  catalogname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  columnname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&autoincrease_) -
      reinterpret_cast<char*>(&length_)) + sizeof(autoincrease_));
}

SqlHeadOne::~SqlHeadOne() {
  // @@protoc_insertion_point(destructor:ArmyAntMessage.DBProxy.SqlHeadOne)
  SharedDtor();
}

void SqlHeadOne::SharedDtor() {
  catalogname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  columnname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SqlHeadOne::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SqlHeadOne& SqlHeadOne::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SqlHeadOne_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  return *internal_default_instance();
}


void SqlHeadOne::Clear() {
// @@protoc_insertion_point(message_clear_start:ArmyAntMessage.DBProxy.SqlHeadOne)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  catalogname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  columnname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&autoincrease_) -
      reinterpret_cast<char*>(&length_)) + sizeof(autoincrease_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SqlHeadOne::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SqlHeadOne*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // int32 length = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_length(value);
        break;
      }
      // string catalogName = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        ctx->extra_parse_data().SetFieldName("ArmyAntMessage.DBProxy.SqlHeadOne.catalogName");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_catalogname();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      // string columnName = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        ctx->extra_parse_data().SetFieldName("ArmyAntMessage.DBProxy.SqlHeadOne.columnName");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_columnname();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      // int32 type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_type(value);
        break;
      }
      // bool allowNumm = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        bool value = val;
        msg->set_allownumm(value);
        break;
      }
      // bool autoIncrease = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        bool value = val;
        msg->set_autoincrease(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SqlHeadOne::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArmyAntMessage.DBProxy.SqlHeadOne)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string catalogName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_catalogname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->catalogname().data(), static_cast<int>(this->catalogname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ArmyAntMessage.DBProxy.SqlHeadOne.catalogName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string columnName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_columnname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->columnname().data(), static_cast<int>(this->columnname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ArmyAntMessage.DBProxy.SqlHeadOne.columnName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allowNumm = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allownumm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool autoIncrease = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autoincrease_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArmyAntMessage.DBProxy.SqlHeadOne)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArmyAntMessage.DBProxy.SqlHeadOne)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SqlHeadOne::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArmyAntMessage.DBProxy.SqlHeadOne)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 length = 1;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->length(), output);
  }

  // string catalogName = 2;
  if (this->catalogname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->catalogname().data(), static_cast<int>(this->catalogname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlHeadOne.catalogName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->catalogname(), output);
  }

  // string columnName = 3;
  if (this->columnname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->columnname().data(), static_cast<int>(this->columnname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlHeadOne.columnName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->columnname(), output);
  }

  // int32 type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // bool allowNumm = 5;
  if (this->allownumm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->allownumm(), output);
  }

  // bool autoIncrease = 6;
  if (this->autoincrease() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->autoincrease(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ArmyAntMessage.DBProxy.SqlHeadOne)
}

::google::protobuf::uint8* SqlHeadOne::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArmyAntMessage.DBProxy.SqlHeadOne)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 length = 1;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->length(), target);
  }

  // string catalogName = 2;
  if (this->catalogname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->catalogname().data(), static_cast<int>(this->catalogname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlHeadOne.catalogName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->catalogname(), target);
  }

  // string columnName = 3;
  if (this->columnname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->columnname().data(), static_cast<int>(this->columnname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlHeadOne.columnName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->columnname(), target);
  }

  // int32 type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // bool allowNumm = 5;
  if (this->allownumm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->allownumm(), target);
  }

  // bool autoIncrease = 6;
  if (this->autoincrease() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->autoincrease(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArmyAntMessage.DBProxy.SqlHeadOne)
  return target;
}

size_t SqlHeadOne::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArmyAntMessage.DBProxy.SqlHeadOne)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string catalogName = 2;
  if (this->catalogname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->catalogname());
  }

  // string columnName = 3;
  if (this->columnname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->columnname());
  }

  // int32 length = 1;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  // int32 type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // bool allowNumm = 5;
  if (this->allownumm() != 0) {
    total_size += 1 + 1;
  }

  // bool autoIncrease = 6;
  if (this->autoincrease() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SqlHeadOne::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArmyAntMessage.DBProxy.SqlHeadOne)
  GOOGLE_DCHECK_NE(&from, this);
  const SqlHeadOne* source =
      ::google::protobuf::DynamicCastToGenerated<SqlHeadOne>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArmyAntMessage.DBProxy.SqlHeadOne)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArmyAntMessage.DBProxy.SqlHeadOne)
    MergeFrom(*source);
  }
}

void SqlHeadOne::MergeFrom(const SqlHeadOne& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArmyAntMessage.DBProxy.SqlHeadOne)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.catalogname().size() > 0) {

    catalogname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.catalogname_);
  }
  if (from.columnname().size() > 0) {

    columnname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.columnname_);
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.allownumm() != 0) {
    set_allownumm(from.allownumm());
  }
  if (from.autoincrease() != 0) {
    set_autoincrease(from.autoincrease());
  }
}

void SqlHeadOne::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArmyAntMessage.DBProxy.SqlHeadOne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SqlHeadOne::CopyFrom(const SqlHeadOne& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArmyAntMessage.DBProxy.SqlHeadOne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SqlHeadOne::IsInitialized() const {
  return true;
}

void SqlHeadOne::Swap(SqlHeadOne* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SqlHeadOne::InternalSwap(SqlHeadOne* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  catalogname_.Swap(&other->catalogname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  columnname_.Swap(&other->columnname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(length_, other->length_);
  swap(type_, other->type_);
  swap(allownumm_, other->allownumm_);
  swap(autoincrease_, other->autoincrease_);
}

::google::protobuf::Metadata SqlHeadOne::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto);
  return ::file_level_metadata_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SqlRow::InitAsDefaultInstance() {
}
class SqlRow::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SqlRow::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SqlRow::SqlRow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArmyAntMessage.DBProxy.SqlRow)
}
SqlRow::SqlRow(const SqlRow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ArmyAntMessage.DBProxy.SqlRow)
}

void SqlRow::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SqlRow_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
}

SqlRow::~SqlRow() {
  // @@protoc_insertion_point(destructor:ArmyAntMessage.DBProxy.SqlRow)
  SharedDtor();
}

void SqlRow::SharedDtor() {
}

void SqlRow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SqlRow& SqlRow::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SqlRow_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  return *internal_default_instance();
}


void SqlRow::Clear() {
// @@protoc_insertion_point(message_clear_start:ArmyAntMessage.DBProxy.SqlRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SqlRow::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SqlRow*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // repeated string fields = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          if (!ptr) goto error;
          ctx->extra_parse_data().SetFieldName("ArmyAntMessage.DBProxy.SqlRow.fields");
          parser_till_end = ::google::protobuf::internal::StringParserUTF8;
          ::std::string* str = msg->add_fields();
          str->clear();
          object = str;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
          ptr = newend;
          if (ptr >= end) break;
        } while((*reinterpret_cast<const ::google::protobuf::uint64*>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SqlRow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArmyAntMessage.DBProxy.SqlRow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string fields = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fields()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fields(this->fields_size() - 1).data(),
            static_cast<int>(this->fields(this->fields_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ArmyAntMessage.DBProxy.SqlRow.fields"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArmyAntMessage.DBProxy.SqlRow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArmyAntMessage.DBProxy.SqlRow)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SqlRow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArmyAntMessage.DBProxy.SqlRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string fields = 1;
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fields(i).data(), static_cast<int>(this->fields(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlRow.fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->fields(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ArmyAntMessage.DBProxy.SqlRow)
}

::google::protobuf::uint8* SqlRow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArmyAntMessage.DBProxy.SqlRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string fields = 1;
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fields(i).data(), static_cast<int>(this->fields(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlRow.fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->fields(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArmyAntMessage.DBProxy.SqlRow)
  return target;
}

size_t SqlRow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArmyAntMessage.DBProxy.SqlRow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string fields = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fields_size());
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fields(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SqlRow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArmyAntMessage.DBProxy.SqlRow)
  GOOGLE_DCHECK_NE(&from, this);
  const SqlRow* source =
      ::google::protobuf::DynamicCastToGenerated<SqlRow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArmyAntMessage.DBProxy.SqlRow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArmyAntMessage.DBProxy.SqlRow)
    MergeFrom(*source);
  }
}

void SqlRow::MergeFrom(const SqlRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArmyAntMessage.DBProxy.SqlRow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
}

void SqlRow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArmyAntMessage.DBProxy.SqlRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SqlRow::CopyFrom(const SqlRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArmyAntMessage.DBProxy.SqlRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SqlRow::IsInitialized() const {
  return true;
}

void SqlRow::Swap(SqlRow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SqlRow::InternalSwap(SqlRow* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  fields_.InternalSwap(CastToBase(&other->fields_));
}

::google::protobuf::Metadata SqlRow::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto);
  return ::file_level_metadata_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SqlDatabaseInfo::InitAsDefaultInstance() {
}
class SqlDatabaseInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SqlDatabaseInfo::kNameFieldNumber;
const int SqlDatabaseInfo::kServerFieldNumber;
const int SqlDatabaseInfo::kCharsetFieldNumber;
const int SqlDatabaseInfo::kSortRuleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SqlDatabaseInfo::SqlDatabaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
}
SqlDatabaseInfo::SqlDatabaseInfo(const SqlDatabaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  charset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.charset().size() > 0) {
    charset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.charset_);
  }
  sortrule_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sortrule().size() > 0) {
    sortrule_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sortrule_);
  }
  // @@protoc_insertion_point(copy_constructor:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
}

void SqlDatabaseInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SqlDatabaseInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  charset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sortrule_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SqlDatabaseInfo::~SqlDatabaseInfo() {
  // @@protoc_insertion_point(destructor:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  SharedDtor();
}

void SqlDatabaseInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  charset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sortrule_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SqlDatabaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SqlDatabaseInfo& SqlDatabaseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SqlDatabaseInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  return *internal_default_instance();
}


void SqlDatabaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  charset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sortrule_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SqlDatabaseInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SqlDatabaseInfo*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        ctx->extra_parse_data().SetFieldName("ArmyAntMessage.DBProxy.SqlDatabaseInfo.name");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_name();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      // string server = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        ctx->extra_parse_data().SetFieldName("ArmyAntMessage.DBProxy.SqlDatabaseInfo.server");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_server();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      // string charset = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        ctx->extra_parse_data().SetFieldName("ArmyAntMessage.DBProxy.SqlDatabaseInfo.charset");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_charset();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      // string sortRule = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        ctx->extra_parse_data().SetFieldName("ArmyAntMessage.DBProxy.SqlDatabaseInfo.sortRule");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_sortrule();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SqlDatabaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ArmyAntMessage.DBProxy.SqlDatabaseInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ArmyAntMessage.DBProxy.SqlDatabaseInfo.server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string charset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_charset()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->charset().data(), static_cast<int>(this->charset().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ArmyAntMessage.DBProxy.SqlDatabaseInfo.charset"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sortRule = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sortrule()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sortrule().data(), static_cast<int>(this->sortrule().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ArmyAntMessage.DBProxy.SqlDatabaseInfo.sortRule"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SqlDatabaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlDatabaseInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string server = 2;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlDatabaseInfo.server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server(), output);
  }

  // string charset = 3;
  if (this->charset().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->charset().data(), static_cast<int>(this->charset().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlDatabaseInfo.charset");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->charset(), output);
  }

  // string sortRule = 4;
  if (this->sortrule().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sortrule().data(), static_cast<int>(this->sortrule().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlDatabaseInfo.sortRule");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sortrule(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
}

::google::protobuf::uint8* SqlDatabaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlDatabaseInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string server = 2;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlDatabaseInfo.server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server(), target);
  }

  // string charset = 3;
  if (this->charset().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->charset().data(), static_cast<int>(this->charset().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlDatabaseInfo.charset");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->charset(), target);
  }

  // string sortRule = 4;
  if (this->sortrule().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sortrule().data(), static_cast<int>(this->sortrule().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlDatabaseInfo.sortRule");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sortrule(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  return target;
}

size_t SqlDatabaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string server = 2;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  // string charset = 3;
  if (this->charset().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->charset());
  }

  // string sortRule = 4;
  if (this->sortrule().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sortrule());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SqlDatabaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SqlDatabaseInfo* source =
      ::google::protobuf::DynamicCastToGenerated<SqlDatabaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
    MergeFrom(*source);
  }
}

void SqlDatabaseInfo::MergeFrom(const SqlDatabaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.charset().size() > 0) {

    charset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.charset_);
  }
  if (from.sortrule().size() > 0) {

    sortrule_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sortrule_);
  }
}

void SqlDatabaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SqlDatabaseInfo::CopyFrom(const SqlDatabaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArmyAntMessage.DBProxy.SqlDatabaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SqlDatabaseInfo::IsInitialized() const {
  return true;
}

void SqlDatabaseInfo::Swap(SqlDatabaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SqlDatabaseInfo::InternalSwap(SqlDatabaseInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_.Swap(&other->server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  charset_.Swap(&other->charset_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sortrule_.Swap(&other->sortrule_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SqlDatabaseInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto);
  return ::file_level_metadata_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SqlTableInfo::InitAsDefaultInstance() {
  ::ArmyAntMessage::DBProxy::_SqlTableInfo_default_instance_._instance.get_mutable()->database_ = const_cast< ::ArmyAntMessage::DBProxy::SqlDatabaseInfo*>(
      ::ArmyAntMessage::DBProxy::SqlDatabaseInfo::internal_default_instance());
}
class SqlTableInfo::HasBitSetters {
 public:
  static const ::ArmyAntMessage::DBProxy::SqlDatabaseInfo& database(const SqlTableInfo* msg);
};

const ::ArmyAntMessage::DBProxy::SqlDatabaseInfo&
SqlTableInfo::HasBitSetters::database(const SqlTableInfo* msg) {
  return *msg->database_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SqlTableInfo::kTableNameFieldNumber;
const int SqlTableInfo::kEngineFieldNumber;
const int SqlTableInfo::kCommentFieldNumber;
const int SqlTableInfo::kDatabaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SqlTableInfo::SqlTableInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArmyAntMessage.DBProxy.SqlTableInfo)
}
SqlTableInfo::SqlTableInfo(const SqlTableInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tablename().size() > 0) {
    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  engine_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.engine().size() > 0) {
    engine_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.engine_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_database()) {
    database_ = new ::ArmyAntMessage::DBProxy::SqlDatabaseInfo(*from.database_);
  } else {
    database_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ArmyAntMessage.DBProxy.SqlTableInfo)
}

void SqlTableInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SqlTableInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  engine_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_ = NULL;
}

SqlTableInfo::~SqlTableInfo() {
  // @@protoc_insertion_point(destructor:ArmyAntMessage.DBProxy.SqlTableInfo)
  SharedDtor();
}

void SqlTableInfo::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  engine_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete database_;
}

void SqlTableInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SqlTableInfo& SqlTableInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SqlTableInfo_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  return *internal_default_instance();
}


void SqlTableInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ArmyAntMessage.DBProxy.SqlTableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  engine_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && database_ != NULL) {
    delete database_;
  }
  database_ = NULL;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SqlTableInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SqlTableInfo*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // string tableName = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        ctx->extra_parse_data().SetFieldName("ArmyAntMessage.DBProxy.SqlTableInfo.tableName");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_tablename();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      // string engine = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        ctx->extra_parse_data().SetFieldName("ArmyAntMessage.DBProxy.SqlTableInfo.engine");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_engine();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      // string comment = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        ctx->extra_parse_data().SetFieldName("ArmyAntMessage.DBProxy.SqlTableInfo.comment");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_comment();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      // .ArmyAntMessage.DBProxy.SqlDatabaseInfo database = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        parser_till_end = ::ArmyAntMessage::DBProxy::SqlDatabaseInfo::_InternalParse;
        object = msg->mutable_database();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SqlTableInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArmyAntMessage.DBProxy.SqlTableInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tableName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), static_cast<int>(this->tablename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ArmyAntMessage.DBProxy.SqlTableInfo.tableName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string engine = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_engine()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->engine().data(), static_cast<int>(this->engine().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ArmyAntMessage.DBProxy.SqlTableInfo.engine"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comment = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ArmyAntMessage.DBProxy.SqlTableInfo.comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ArmyAntMessage.DBProxy.SqlDatabaseInfo database = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_database()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArmyAntMessage.DBProxy.SqlTableInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArmyAntMessage.DBProxy.SqlTableInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SqlTableInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArmyAntMessage.DBProxy.SqlTableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tableName = 5;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), static_cast<int>(this->tablename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlTableInfo.tableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->tablename(), output);
  }

  // string engine = 6;
  if (this->engine().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->engine().data(), static_cast<int>(this->engine().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlTableInfo.engine");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->engine(), output);
  }

  // string comment = 7;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlTableInfo.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->comment(), output);
  }

  // .ArmyAntMessage.DBProxy.SqlDatabaseInfo database = 8;
  if (this->has_database()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::database(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ArmyAntMessage.DBProxy.SqlTableInfo)
}

::google::protobuf::uint8* SqlTableInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArmyAntMessage.DBProxy.SqlTableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tableName = 5;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), static_cast<int>(this->tablename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlTableInfo.tableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->tablename(), target);
  }

  // string engine = 6;
  if (this->engine().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->engine().data(), static_cast<int>(this->engine().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlTableInfo.engine");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->engine(), target);
  }

  // string comment = 7;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.SqlTableInfo.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->comment(), target);
  }

  // .ArmyAntMessage.DBProxy.SqlDatabaseInfo database = 8;
  if (this->has_database()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::database(this), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArmyAntMessage.DBProxy.SqlTableInfo)
  return target;
}

size_t SqlTableInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArmyAntMessage.DBProxy.SqlTableInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tableName = 5;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // string engine = 6;
  if (this->engine().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->engine());
  }

  // string comment = 7;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // .ArmyAntMessage.DBProxy.SqlDatabaseInfo database = 8;
  if (this->has_database()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *database_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SqlTableInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArmyAntMessage.DBProxy.SqlTableInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SqlTableInfo* source =
      ::google::protobuf::DynamicCastToGenerated<SqlTableInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArmyAntMessage.DBProxy.SqlTableInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArmyAntMessage.DBProxy.SqlTableInfo)
    MergeFrom(*source);
  }
}

void SqlTableInfo::MergeFrom(const SqlTableInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArmyAntMessage.DBProxy.SqlTableInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  if (from.engine().size() > 0) {

    engine_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.engine_);
  }
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_database()) {
    mutable_database()->::ArmyAntMessage::DBProxy::SqlDatabaseInfo::MergeFrom(from.database());
  }
}

void SqlTableInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArmyAntMessage.DBProxy.SqlTableInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SqlTableInfo::CopyFrom(const SqlTableInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArmyAntMessage.DBProxy.SqlTableInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SqlTableInfo::IsInitialized() const {
  return true;
}

void SqlTableInfo::Swap(SqlTableInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SqlTableInfo::InternalSwap(SqlTableInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tablename_.Swap(&other->tablename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  engine_.Swap(&other->engine_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(database_, other->database_);
}

::google::protobuf::Metadata SqlTableInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto);
  return ::file_level_metadata_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SqlResult::InitAsDefaultInstance() {
  ::ArmyAntMessage::DBProxy::_SqlResult_default_instance_._instance.get_mutable()->table_ = const_cast< ::ArmyAntMessage::DBProxy::SqlTableInfo*>(
      ::ArmyAntMessage::DBProxy::SqlTableInfo::internal_default_instance());
}
class SqlResult::HasBitSetters {
 public:
  static const ::ArmyAntMessage::DBProxy::SqlTableInfo& table(const SqlResult* msg);
};

const ::ArmyAntMessage::DBProxy::SqlTableInfo&
SqlResult::HasBitSetters::table(const SqlResult* msg) {
  return *msg->table_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SqlResult::kTableFieldNumber;
const int SqlResult::kHeadsFieldNumber;
const int SqlResult::kRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SqlResult::SqlResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArmyAntMessage.DBProxy.SqlResult)
}
SqlResult::SqlResult(const SqlResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      heads_(from.heads_),
      rows_(from.rows_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_table()) {
    table_ = new ::ArmyAntMessage::DBProxy::SqlTableInfo(*from.table_);
  } else {
    table_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ArmyAntMessage.DBProxy.SqlResult)
}

void SqlResult::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SqlResult_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  table_ = NULL;
}

SqlResult::~SqlResult() {
  // @@protoc_insertion_point(destructor:ArmyAntMessage.DBProxy.SqlResult)
  SharedDtor();
}

void SqlResult::SharedDtor() {
  if (this != internal_default_instance()) delete table_;
}

void SqlResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SqlResult& SqlResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SqlResult_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  return *internal_default_instance();
}


void SqlResult::Clear() {
// @@protoc_insertion_point(message_clear_start:ArmyAntMessage.DBProxy.SqlResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heads_.Clear();
  rows_.Clear();
  if (GetArenaNoVirtual() == NULL && table_ != NULL) {
    delete table_;
  }
  table_ = NULL;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SqlResult::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SqlResult*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // .ArmyAntMessage.DBProxy.SqlTableInfo table = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        parser_till_end = ::ArmyAntMessage::DBProxy::SqlTableInfo::_InternalParse;
        object = msg->mutable_table();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      // repeated .ArmyAntMessage.DBProxy.SqlHeadOne heads = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          if (!ptr) goto error;
          parser_till_end = ::ArmyAntMessage::DBProxy::SqlHeadOne::_InternalParse;
          object = msg->add_heads();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
          ptr = newend;
          if (ptr >= end) break;
        } while((*reinterpret_cast<const ::google::protobuf::uint64*>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .ArmyAntMessage.DBProxy.SqlRow rows = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          if (!ptr) goto error;
          parser_till_end = ::ArmyAntMessage::DBProxy::SqlRow::_InternalParse;
          object = msg->add_rows();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
          ptr = newend;
          if (ptr >= end) break;
        } while((*reinterpret_cast<const ::google::protobuf::uint64*>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SqlResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArmyAntMessage.DBProxy.SqlResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ArmyAntMessage.DBProxy.SqlTableInfo table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ArmyAntMessage.DBProxy.SqlHeadOne heads = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_heads()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ArmyAntMessage.DBProxy.SqlRow rows = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArmyAntMessage.DBProxy.SqlResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArmyAntMessage.DBProxy.SqlResult)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SqlResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArmyAntMessage.DBProxy.SqlResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ArmyAntMessage.DBProxy.SqlTableInfo table = 1;
  if (this->has_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::table(this), output);
  }

  // repeated .ArmyAntMessage.DBProxy.SqlHeadOne heads = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->heads_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->heads(static_cast<int>(i)),
      output);
  }

  // repeated .ArmyAntMessage.DBProxy.SqlRow rows = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->rows(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ArmyAntMessage.DBProxy.SqlResult)
}

::google::protobuf::uint8* SqlResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArmyAntMessage.DBProxy.SqlResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ArmyAntMessage.DBProxy.SqlTableInfo table = 1;
  if (this->has_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::table(this), deterministic, target);
  }

  // repeated .ArmyAntMessage.DBProxy.SqlHeadOne heads = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->heads_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->heads(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ArmyAntMessage.DBProxy.SqlRow rows = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->rows(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArmyAntMessage.DBProxy.SqlResult)
  return target;
}

size_t SqlResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArmyAntMessage.DBProxy.SqlResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ArmyAntMessage.DBProxy.SqlHeadOne heads = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->heads_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->heads(static_cast<int>(i)));
    }
  }

  // repeated .ArmyAntMessage.DBProxy.SqlRow rows = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->rows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rows(static_cast<int>(i)));
    }
  }

  // .ArmyAntMessage.DBProxy.SqlTableInfo table = 1;
  if (this->has_table()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *table_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SqlResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArmyAntMessage.DBProxy.SqlResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SqlResult* source =
      ::google::protobuf::DynamicCastToGenerated<SqlResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArmyAntMessage.DBProxy.SqlResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArmyAntMessage.DBProxy.SqlResult)
    MergeFrom(*source);
  }
}

void SqlResult::MergeFrom(const SqlResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArmyAntMessage.DBProxy.SqlResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  heads_.MergeFrom(from.heads_);
  rows_.MergeFrom(from.rows_);
  if (from.has_table()) {
    mutable_table()->::ArmyAntMessage::DBProxy::SqlTableInfo::MergeFrom(from.table());
  }
}

void SqlResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArmyAntMessage.DBProxy.SqlResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SqlResult::CopyFrom(const SqlResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArmyAntMessage.DBProxy.SqlResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SqlResult::IsInitialized() const {
  return true;
}

void SqlResult::Swap(SqlResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SqlResult::InternalSwap(SqlResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&heads_)->InternalSwap(CastToBase(&other->heads_));
  CastToBase(&rows_)->InternalSwap(CastToBase(&other->rows_));
  swap(table_, other->table_);
}

::google::protobuf::Metadata SqlResult::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto);
  return ::file_level_metadata_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Any2Dbp_SqlRequest::InitAsDefaultInstance() {
}
class Any2Dbp_SqlRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Any2Dbp_SqlRequest::kTypeFieldNumber;
const int Any2Dbp_SqlRequest::kTableNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Any2Dbp_SqlRequest::Any2Dbp_SqlRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
}
Any2Dbp_SqlRequest::Any2Dbp_SqlRequest(const Any2Dbp_SqlRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tablename().size() > 0) {
    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
}

void Any2Dbp_SqlRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Any2Dbp_SqlRequest_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

Any2Dbp_SqlRequest::~Any2Dbp_SqlRequest() {
  // @@protoc_insertion_point(destructor:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  SharedDtor();
}

void Any2Dbp_SqlRequest::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Any2Dbp_SqlRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Any2Dbp_SqlRequest& Any2Dbp_SqlRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Any2Dbp_SqlRequest_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto.base);
  return *internal_default_instance();
}


void Any2Dbp_SqlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Any2Dbp_SqlRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Any2Dbp_SqlRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // int32 type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_type(value);
        break;
      }
      // string tableName = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        ctx->extra_parse_data().SetFieldName("ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest.tableName");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_tablename();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Any2Dbp_SqlRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tableName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), static_cast<int>(this->tablename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest.tableName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Any2Dbp_SqlRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string tableName = 2;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), static_cast<int>(this->tablename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest.tableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tablename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
}

::google::protobuf::uint8* Any2Dbp_SqlRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string tableName = 2;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), static_cast<int>(this->tablename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest.tableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tablename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  return target;
}

size_t Any2Dbp_SqlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tableName = 2;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Any2Dbp_SqlRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Any2Dbp_SqlRequest* source =
      ::google::protobuf::DynamicCastToGenerated<Any2Dbp_SqlRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
    MergeFrom(*source);
  }
}

void Any2Dbp_SqlRequest::MergeFrom(const Any2Dbp_SqlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Any2Dbp_SqlRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Any2Dbp_SqlRequest::CopyFrom(const Any2Dbp_SqlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Any2Dbp_SqlRequest::IsInitialized() const {
  return true;
}

void Any2Dbp_SqlRequest::Swap(Any2Dbp_SqlRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Any2Dbp_SqlRequest::InternalSwap(Any2Dbp_SqlRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tablename_.Swap(&other->tablename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
}

::google::protobuf::Metadata Any2Dbp_SqlRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto);
  return ::file_level_metadata_ArmyAntMessage_2fDBProxy_2fSqlRequest_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace DBProxy
}  // namespace ArmyAntMessage
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ArmyAntMessage::DBProxy::SqlHeadOne* Arena::CreateMaybeMessage< ::ArmyAntMessage::DBProxy::SqlHeadOne >(Arena* arena) {
  return Arena::CreateInternal< ::ArmyAntMessage::DBProxy::SqlHeadOne >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ArmyAntMessage::DBProxy::SqlRow* Arena::CreateMaybeMessage< ::ArmyAntMessage::DBProxy::SqlRow >(Arena* arena) {
  return Arena::CreateInternal< ::ArmyAntMessage::DBProxy::SqlRow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ArmyAntMessage::DBProxy::SqlDatabaseInfo* Arena::CreateMaybeMessage< ::ArmyAntMessage::DBProxy::SqlDatabaseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ArmyAntMessage::DBProxy::SqlDatabaseInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ArmyAntMessage::DBProxy::SqlTableInfo* Arena::CreateMaybeMessage< ::ArmyAntMessage::DBProxy::SqlTableInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ArmyAntMessage::DBProxy::SqlTableInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ArmyAntMessage::DBProxy::SqlResult* Arena::CreateMaybeMessage< ::ArmyAntMessage::DBProxy::SqlResult >(Arena* arena) {
  return Arena::CreateInternal< ::ArmyAntMessage::DBProxy::SqlResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ArmyAntMessage::DBProxy::Any2Dbp_SqlRequest* Arena::CreateMaybeMessage< ::ArmyAntMessage::DBProxy::Any2Dbp_SqlRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ArmyAntMessage::DBProxy::Any2Dbp_SqlRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
