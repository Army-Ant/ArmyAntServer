// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ArmyAntMessage/System/SocketHead.proto

#include "ArmyAntMessage/System/SocketHead.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace ArmyAntMessage {
namespace System {
class SocketExtendNormal_V0_0_0_1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SocketExtendNormal_V0_0_0_1> _instance;
} _SocketExtendNormal_V0_0_0_1_default_instance_;
}  // namespace System
}  // namespace ArmyAntMessage
static void InitDefaultsSocketExtendNormal_V0_0_0_1_ArmyAntMessage_2fSystem_2fSocketHead_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ArmyAntMessage::System::_SocketExtendNormal_V0_0_0_1_default_instance_;
    new (ptr) ::ArmyAntMessage::System::SocketExtendNormal_V0_0_0_1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ArmyAntMessage::System::SocketExtendNormal_V0_0_0_1::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SocketExtendNormal_V0_0_0_1_ArmyAntMessage_2fSystem_2fSocketHead_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSocketExtendNormal_V0_0_0_1_ArmyAntMessage_2fSystem_2fSocketHead_2eproto}, {}};

void InitDefaults_ArmyAntMessage_2fSystem_2fSocketHead_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_SocketExtendNormal_V0_0_0_1_ArmyAntMessage_2fSystem_2fSocketHead_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ArmyAntMessage_2fSystem_2fSocketHead_2eproto[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_ArmyAntMessage_2fSystem_2fSocketHead_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ArmyAntMessage_2fSystem_2fSocketHead_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ArmyAntMessage_2fSystem_2fSocketHead_2eproto::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::System::SocketExtendNormal_V0_0_0_1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::System::SocketExtendNormal_V0_0_0_1, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::System::SocketExtendNormal_V0_0_0_1, content_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::System::SocketExtendNormal_V0_0_0_1, message_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::System::SocketExtendNormal_V0_0_0_1, conversation_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::System::SocketExtendNormal_V0_0_0_1, conversation_step_index_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ArmyAntMessage::System::SocketExtendNormal_V0_0_0_1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ArmyAntMessage::System::_SocketExtendNormal_V0_0_0_1_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ArmyAntMessage_2fSystem_2fSocketHead_2eproto = {
  {}, AddDescriptors_ArmyAntMessage_2fSystem_2fSocketHead_2eproto, "ArmyAntMessage/System/SocketHead.proto", schemas,
  file_default_instances, TableStruct_ArmyAntMessage_2fSystem_2fSocketHead_2eproto::offsets,
  file_level_metadata_ArmyAntMessage_2fSystem_2fSocketHead_2eproto, 1, file_level_enum_descriptors_ArmyAntMessage_2fSystem_2fSocketHead_2eproto, file_level_service_descriptors_ArmyAntMessage_2fSystem_2fSocketHead_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_ArmyAntMessage_2fSystem_2fSocketHead_2eproto = {
  false, InitDefaults_ArmyAntMessage_2fSystem_2fSocketHead_2eproto, 
  "\n&ArmyAntMessage/System/SocketHead.proto"
  "\022\025ArmyAntMessage.System\"\227\001\n\033SocketExtend"
  "Normal_V0_0_0_1\022\016\n\006app_id\030\001 \001(\003\022\026\n\016conte"
  "nt_length\030\002 \001(\005\022\024\n\014message_code\030\003 \001(\005\022\031\n"
  "\021conversation_code\030\004 \001(\005\022\037\n\027conversation"
  "_step_index\030\005 \001(\005*\177\n\024ConversationStepTyp"
  "e\022\013\n\007Default\020\000\022\016\n\nNoticeOnly\020\001\022\n\n\006AskFor"
  "\020\002\022\025\n\021StartConversation\020\003\022\026\n\022Conversatio"
  "nStepOn\020\004\022\017\n\013ResponseEnd\020\005b\006proto3"
,
  "ArmyAntMessage/System/SocketHead.proto", &assign_descriptors_table_ArmyAntMessage_2fSystem_2fSocketHead_2eproto, 354,
};

void AddDescriptors_ArmyAntMessage_2fSystem_2fSocketHead_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ArmyAntMessage_2fSystem_2fSocketHead_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ArmyAntMessage_2fSystem_2fSocketHead_2eproto = []() { AddDescriptors_ArmyAntMessage_2fSystem_2fSocketHead_2eproto(); return true; }();
namespace ArmyAntMessage {
namespace System {
const ::google::protobuf::EnumDescriptor* ConversationStepType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_ArmyAntMessage_2fSystem_2fSocketHead_2eproto);
  return file_level_enum_descriptors_ArmyAntMessage_2fSystem_2fSocketHead_2eproto[0];
}
bool ConversationStepType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SocketExtendNormal_V0_0_0_1::InitAsDefaultInstance() {
}
class SocketExtendNormal_V0_0_0_1::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SocketExtendNormal_V0_0_0_1::kAppIdFieldNumber;
const int SocketExtendNormal_V0_0_0_1::kContentLengthFieldNumber;
const int SocketExtendNormal_V0_0_0_1::kMessageCodeFieldNumber;
const int SocketExtendNormal_V0_0_0_1::kConversationCodeFieldNumber;
const int SocketExtendNormal_V0_0_0_1::kConversationStepIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SocketExtendNormal_V0_0_0_1::SocketExtendNormal_V0_0_0_1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
}
SocketExtendNormal_V0_0_0_1::SocketExtendNormal_V0_0_0_1(const SocketExtendNormal_V0_0_0_1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&conversation_step_index_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(conversation_step_index_));
  // @@protoc_insertion_point(copy_constructor:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
}

void SocketExtendNormal_V0_0_0_1::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conversation_step_index_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(conversation_step_index_));
}

SocketExtendNormal_V0_0_0_1::~SocketExtendNormal_V0_0_0_1() {
  // @@protoc_insertion_point(destructor:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  SharedDtor();
}

void SocketExtendNormal_V0_0_0_1::SharedDtor() {
}

void SocketExtendNormal_V0_0_0_1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SocketExtendNormal_V0_0_0_1& SocketExtendNormal_V0_0_0_1::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SocketExtendNormal_V0_0_0_1_ArmyAntMessage_2fSystem_2fSocketHead_2eproto.base);
  return *internal_default_instance();
}


void SocketExtendNormal_V0_0_0_1::Clear() {
// @@protoc_insertion_point(message_clear_start:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conversation_step_index_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(conversation_step_index_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SocketExtendNormal_V0_0_0_1::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SocketExtendNormal_V0_0_0_1*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // int64 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int64 value = val;
        msg->set_app_id(value);
        break;
      }
      // int32 content_length = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_content_length(value);
        break;
      }
      // int32 message_code = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_message_code(value);
        break;
      }
      // int32 conversation_code = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_conversation_code(value);
        break;
      }
      // int32 conversation_step_index = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_conversation_step_index(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SocketExtendNormal_V0_0_0_1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 content_length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &content_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 message_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &message_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 conversation_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &conversation_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 conversation_step_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &conversation_step_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SocketExtendNormal_V0_0_0_1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 app_id = 1;
  if (this->app_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->app_id(), output);
  }

  // int32 content_length = 2;
  if (this->content_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->content_length(), output);
  }

  // int32 message_code = 3;
  if (this->message_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->message_code(), output);
  }

  // int32 conversation_code = 4;
  if (this->conversation_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->conversation_code(), output);
  }

  // int32 conversation_step_index = 5;
  if (this->conversation_step_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->conversation_step_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
}

::google::protobuf::uint8* SocketExtendNormal_V0_0_0_1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 app_id = 1;
  if (this->app_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->app_id(), target);
  }

  // int32 content_length = 2;
  if (this->content_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->content_length(), target);
  }

  // int32 message_code = 3;
  if (this->message_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->message_code(), target);
  }

  // int32 conversation_code = 4;
  if (this->conversation_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->conversation_code(), target);
  }

  // int32 conversation_step_index = 5;
  if (this->conversation_step_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->conversation_step_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  return target;
}

size_t SocketExtendNormal_V0_0_0_1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 app_id = 1;
  if (this->app_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->app_id());
  }

  // int32 content_length = 2;
  if (this->content_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->content_length());
  }

  // int32 message_code = 3;
  if (this->message_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->message_code());
  }

  // int32 conversation_code = 4;
  if (this->conversation_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->conversation_code());
  }

  // int32 conversation_step_index = 5;
  if (this->conversation_step_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->conversation_step_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SocketExtendNormal_V0_0_0_1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  GOOGLE_DCHECK_NE(&from, this);
  const SocketExtendNormal_V0_0_0_1* source =
      ::google::protobuf::DynamicCastToGenerated<SocketExtendNormal_V0_0_0_1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
    MergeFrom(*source);
  }
}

void SocketExtendNormal_V0_0_0_1::MergeFrom(const SocketExtendNormal_V0_0_0_1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.app_id() != 0) {
    set_app_id(from.app_id());
  }
  if (from.content_length() != 0) {
    set_content_length(from.content_length());
  }
  if (from.message_code() != 0) {
    set_message_code(from.message_code());
  }
  if (from.conversation_code() != 0) {
    set_conversation_code(from.conversation_code());
  }
  if (from.conversation_step_index() != 0) {
    set_conversation_step_index(from.conversation_step_index());
  }
}

void SocketExtendNormal_V0_0_0_1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SocketExtendNormal_V0_0_0_1::CopyFrom(const SocketExtendNormal_V0_0_0_1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArmyAntMessage.System.SocketExtendNormal_V0_0_0_1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SocketExtendNormal_V0_0_0_1::IsInitialized() const {
  return true;
}

void SocketExtendNormal_V0_0_0_1::Swap(SocketExtendNormal_V0_0_0_1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SocketExtendNormal_V0_0_0_1::InternalSwap(SocketExtendNormal_V0_0_0_1* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(app_id_, other->app_id_);
  swap(content_length_, other->content_length_);
  swap(message_code_, other->message_code_);
  swap(conversation_code_, other->conversation_code_);
  swap(conversation_step_index_, other->conversation_step_index_);
}

::google::protobuf::Metadata SocketExtendNormal_V0_0_0_1::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ArmyAntMessage_2fSystem_2fSocketHead_2eproto);
  return ::file_level_metadata_ArmyAntMessage_2fSystem_2fSocketHead_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace System
}  // namespace ArmyAntMessage
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ArmyAntMessage::System::SocketExtendNormal_V0_0_0_1* Arena::CreateMaybeMessage< ::ArmyAntMessage::System::SocketExtendNormal_V0_0_0_1 >(Arena* arena) {
  return Arena::CreateInternal< ::ArmyAntMessage::System::SocketExtendNormal_V0_0_0_1 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
