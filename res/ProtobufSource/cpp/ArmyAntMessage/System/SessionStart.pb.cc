// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ArmyAntMessage/System/SessionStart.proto

#include "ArmyAntMessage/System/SessionStart.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace ArmyAntMessage {
namespace System {
class ClientEnterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientEnter>
      _instance;
} _ClientEnter_default_instance_;
}  // namespace System
}  // namespace ArmyAntMessage
namespace protobuf_ArmyAntMessage_2fSystem_2fSessionStart_2eproto {
void InitDefaultsClientEnterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ArmyAntMessage::System::_ClientEnter_default_instance_;
    new (ptr) ::ArmyAntMessage::System::ClientEnter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ArmyAntMessage::System::ClientEnter::InitAsDefaultInstance();
}

void InitDefaultsClientEnter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientEnterImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArmyAntMessage::System::ClientEnter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ArmyAntMessage::System::ClientEnter)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ArmyAntMessage::System::_ClientEnter_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ArmyAntMessage/System/SessionStart.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n(ArmyAntMessage/System/SessionStart.pro"
      "to\022\025ArmyAntMessage.System\"\r\n\013ClientEnter"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 88);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ArmyAntMessage/System/SessionStart.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ArmyAntMessage_2fSystem_2fSessionStart_2eproto
namespace ArmyAntMessage {
namespace System {

// ===================================================================

void ClientEnter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientEnter::ClientEnter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ArmyAntMessage_2fSystem_2fSessionStart_2eproto::InitDefaultsClientEnter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArmyAntMessage.System.ClientEnter)
}
ClientEnter::ClientEnter(const ClientEnter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ArmyAntMessage.System.ClientEnter)
}

void ClientEnter::SharedCtor() {
  _cached_size_ = 0;
}

ClientEnter::~ClientEnter() {
  // @@protoc_insertion_point(destructor:ArmyAntMessage.System.ClientEnter)
  SharedDtor();
}

void ClientEnter::SharedDtor() {
}

void ClientEnter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientEnter::descriptor() {
  ::protobuf_ArmyAntMessage_2fSystem_2fSessionStart_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ArmyAntMessage_2fSystem_2fSessionStart_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientEnter& ClientEnter::default_instance() {
  ::protobuf_ArmyAntMessage_2fSystem_2fSessionStart_2eproto::InitDefaultsClientEnter();
  return *internal_default_instance();
}

ClientEnter* ClientEnter::New(::google::protobuf::Arena* arena) const {
  ClientEnter* n = new ClientEnter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientEnter::Clear() {
// @@protoc_insertion_point(message_clear_start:ArmyAntMessage.System.ClientEnter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ClientEnter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArmyAntMessage.System.ClientEnter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ArmyAntMessage.System.ClientEnter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArmyAntMessage.System.ClientEnter)
  return false;
#undef DO_
}

void ClientEnter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArmyAntMessage.System.ClientEnter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ArmyAntMessage.System.ClientEnter)
}

::google::protobuf::uint8* ClientEnter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArmyAntMessage.System.ClientEnter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArmyAntMessage.System.ClientEnter)
  return target;
}

size_t ClientEnter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArmyAntMessage.System.ClientEnter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientEnter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArmyAntMessage.System.ClientEnter)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientEnter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientEnter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArmyAntMessage.System.ClientEnter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArmyAntMessage.System.ClientEnter)
    MergeFrom(*source);
  }
}

void ClientEnter::MergeFrom(const ClientEnter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArmyAntMessage.System.ClientEnter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClientEnter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArmyAntMessage.System.ClientEnter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientEnter::CopyFrom(const ClientEnter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArmyAntMessage.System.ClientEnter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientEnter::IsInitialized() const {
  return true;
}

void ClientEnter::Swap(ClientEnter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientEnter::InternalSwap(ClientEnter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientEnter::GetMetadata() const {
  protobuf_ArmyAntMessage_2fSystem_2fSessionStart_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ArmyAntMessage_2fSystem_2fSessionStart_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace System
}  // namespace ArmyAntMessage

// @@protoc_insertion_point(global_scope)
