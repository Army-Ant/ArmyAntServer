// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ArmyAntMessage/DBProxy/SqlRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ArmyAntMessage.DBProxy {

  /// <summary>Holder for reflection information generated from ArmyAntMessage/DBProxy/SqlRequest.proto</summary>
  public static partial class SqlRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for ArmyAntMessage/DBProxy/SqlRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SqlRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidBcm15QW50TWVzc2FnZS9EQlByb3h5L1NxbFJlcXVlc3QucHJvdG8SFkFy",
            "bXlBbnRNZXNzYWdlLkRCUHJveHkiVQoUQW55MkRicF9Mb2dpblJlcXVlc3QS",
            "EwoLbWFjX2FkZHJlc3MYASABKAMSCgoCaXAYAiABKAkSHAoUc2VydmVyX3R5",
            "cGVfY2hlY2tzdW0YAyABKAkiXgofRGJwMkFueV9Mb2dpblJlc3BvbnNlU3Vj",
            "Y2Vzc2Z1bBITCgthdXRoX3N0cmluZxgBIAEoCRIUCgxjdXJyZW50X3RpbWUY",
            "AiABKAMSEAoIZW5kX3RpbWUYAyABKAMiPQocRGJwMkFueV9Mb2dpblJlc3Bv",
            "bnNlRmFpbHVyZRIMCgRjb2RlGAEgASgFEg8KB21lc3NhZ2UYAiABKAkiLAoV",
            "QW55MkRicF9Mb2dvdXRSZXF1ZXN0EhMKC2F1dGhfc3RyaW5nGAEgASgJIjkK",
            "FkRicDJBbnlfTG9nb3V0UmVzcG9uc2USDgoGcmVzdWx0GAEgASgIEg8KB21l",
            "c3NhZ2UYAiABKAkifwoKU3FsSGVhZE9uZRIOCgZsZW5ndGgYASABKAUSFAoM",
            "Y2F0YWxvZ19uYW1lGAIgASgJEhMKC2NvbHVtbl9uYW1lGAMgASgJEgwKBHR5",
            "cGUYBCABKAUSEQoJYWxsb3dfbnVtGAUgASgIEhUKDWF1dG9faW5jcmVhc2UY",
            "BiABKAgiGAoGU3FsUm93Eg4KBmZpZWxkcxgBIAMoCSJTCg9TcWxEYXRhYmFz",
            "ZUluZm8SDAoEbmFtZRgBIAEoCRIOCgZzZXJ2ZXIYAiABKAkSDwoHY2hhcnNl",
            "dBgDIAEoCRIRCglzb3J0X3J1bGUYBCABKAkiQwoMU3FsVGFibGVJbmZvEhIK",
            "CnRhYmxlX25hbWUYBSABKAkSDgoGZW5naW5lGAYgASgJEg8KB2NvbW1lbnQY",
            "ByABKAkiDwoNU3FsQ29sdW1uSW5mbyKhAQoJU3FsUmVzdWx0EjMKBXRhYmxl",
            "GAEgASgLMiQuQXJteUFudE1lc3NhZ2UuREJQcm94eS5TcWxUYWJsZUluZm8S",
            "MQoFaGVhZHMYAiADKAsyIi5Bcm15QW50TWVzc2FnZS5EQlByb3h5LlNxbEhl",
            "YWRPbmUSLAoEcm93cxgDIAMoCzIeLkFybXlBbnRNZXNzYWdlLkRCUHJveHku",
            "U3FsUm93IroBChhBbnkyRGJwX1NxbFJlcXVlc3RfVGFibGUSEwoLYXV0aF9z",
            "dHJpbmcYASABKAkSNAoEdHlwZRgCIAEoDjImLkFybXlBbnRNZXNzYWdlLkRC",
            "UHJveHkuU3FsUmVxdWVzdFR5cGUSEgoKdGFibGVfbmFtZRgDIAEoCRI/ChF0",
            "YWJsZV9jcmVhdGVfZGF0YRgEIAEoCzIkLkFybXlBbnRNZXNzYWdlLkRCUHJv",
            "eHkuU3FsVGFibGVJbmZvImYKGUFueTJEYnBfU3FsUmVxdWVzdF9TZWxlY3QS",
            "EwoLYXV0aF9zdHJpbmcYASABKAkSEgoKdGFibGVfbmFtZRgCIAEoCRIPCgdj",
            "b2x1bW5zGAMgAygJEg8KB2NsYXVzZXMYBCADKAkirAEKGUFueTJEYnBfU3Fs",
            "UmVxdWVzdF9VcGRhdGUSEwoLYXV0aF9zdHJpbmcYASABKAkSNAoEdHlwZRgC",
            "IAEoDjImLkFybXlBbnRNZXNzYWdlLkRCUHJveHkuU3FsUmVxdWVzdFR5cGUS",
            "EgoKdGFibGVfbmFtZRgDIAEoCRIPCgdjb2x1bW5zGAQgAygJEg4KBnZhbHVl",
            "cxgFIAMoCRIPCgdjbGF1c2VzGAYgAygJItIBChlBbnkyRGJwX1NxbFJlcXVl",
            "c3RfQ29sdW1uEhMKC2F1dGhfc3RyaW5nGAEgASgJEjQKBHR5cGUYAiABKA4y",
            "Ji5Bcm15QW50TWVzc2FnZS5EQlByb3h5LlNxbFJlcXVlc3RUeXBlEhIKCnRh",
            "YmxlX25hbWUYAyABKAkSEwoLY29sdW1uX25hbWUYBCABKAkSQQoSY29sdW1u",
            "X2NyZWF0ZV9pbmZvGAUgASgLMiUuQXJteUFudE1lc3NhZ2UuREJQcm94eS5T",
            "cWxDb2x1bW5JbmZvIoABChxBbnkyRGJwX1NxbFJlcXVlc3RfU3FsU3RyaW5n",
            "EhMKC2F1dGhfc3RyaW5nGAEgASgJEj4KBHR5cGUYAiABKA4yMC5Bcm15QW50",
            "TWVzc2FnZS5EQlByb3h5LlNxbFJlcXVlc3RUeXBlX1NxbFN0cmluZxILCgNz",
            "dHIYAyABKAkiLQobRGJwMkFueV9TcWxSZXNwb25zZV9Cb29sZWFuEg4KBnJl",
            "c3VsdBgBIAEoCCIsChpEYnAyQW55X1NxbFJlc3BvbnNlX0NvdW50cxIOCgZy",
            "ZXN1bHQYASADKAUiTwoaRGJwMkFueV9TcWxSZXNwb25zZV9UYWJsZXMSMQoG",
            "cmVzdWx0GAEgAygLMiEuQXJteUFudE1lc3NhZ2UuREJQcm94eS5TcWxSZXN1",
            "bHQiOgoZRGJwMkFueV9TcWxSZXNwb25zZV9FcnJvchIMCgRjb2RlGAEgASgF",
            "Eg8KB21lc3NhZ2UYAiABKAkqTQoOU3FsUmVxdWVzdFR5cGUSCwoHREVGQVVM",
            "VBAAEgoKBlNFTEVDVBABEgoKBlVQREFURRACEgoKBkRFTEVURRADEgoKBklO",
            "U0VSVBAEKncKGFNxbFJlcXVlc3RUeXBlX1NxbFN0cmluZxIWChJFWEVDVVRF",
            "QllTUUxTVFJJTkcQABIUChBRVUVSWUJZU1FMU1RSSU5HEAESFQoRVVBEQVRF",
            "QllTUUxTVFJJTkcQAhIWChJFWEVDVVRFQllTUUxTQ1JJUFQQA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ArmyAntMessage.DBProxy.SqlRequestType), typeof(global::ArmyAntMessage.DBProxy.SqlRequestType_SqlString), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Any2Dbp_LoginRequest), global::ArmyAntMessage.DBProxy.Any2Dbp_LoginRequest.Parser, new[]{ "MacAddress", "Ip", "ServerTypeChecksum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Dbp2Any_LoginResponseSuccessful), global::ArmyAntMessage.DBProxy.Dbp2Any_LoginResponseSuccessful.Parser, new[]{ "AuthString", "CurrentTime", "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Dbp2Any_LoginResponseFailure), global::ArmyAntMessage.DBProxy.Dbp2Any_LoginResponseFailure.Parser, new[]{ "Code", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Any2Dbp_LogoutRequest), global::ArmyAntMessage.DBProxy.Any2Dbp_LogoutRequest.Parser, new[]{ "AuthString" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Dbp2Any_LogoutResponse), global::ArmyAntMessage.DBProxy.Dbp2Any_LogoutResponse.Parser, new[]{ "Result", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.SqlHeadOne), global::ArmyAntMessage.DBProxy.SqlHeadOne.Parser, new[]{ "Length", "CatalogName", "ColumnName", "Type", "AllowNum", "AutoIncrease" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.SqlRow), global::ArmyAntMessage.DBProxy.SqlRow.Parser, new[]{ "Fields" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.SqlDatabaseInfo), global::ArmyAntMessage.DBProxy.SqlDatabaseInfo.Parser, new[]{ "Name", "Server", "Charset", "SortRule" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.SqlTableInfo), global::ArmyAntMessage.DBProxy.SqlTableInfo.Parser, new[]{ "TableName", "Engine", "Comment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.SqlColumnInfo), global::ArmyAntMessage.DBProxy.SqlColumnInfo.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.SqlResult), global::ArmyAntMessage.DBProxy.SqlResult.Parser, new[]{ "Table", "Heads", "Rows" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest_Table), global::ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest_Table.Parser, new[]{ "AuthString", "Type", "TableName", "TableCreateData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest_Select), global::ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest_Select.Parser, new[]{ "AuthString", "TableName", "Columns", "Clauses" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest_Update), global::ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest_Update.Parser, new[]{ "AuthString", "Type", "TableName", "Columns", "Values", "Clauses" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest_Column), global::ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest_Column.Parser, new[]{ "AuthString", "Type", "TableName", "ColumnName", "ColumnCreateInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest_SqlString), global::ArmyAntMessage.DBProxy.Any2Dbp_SqlRequest_SqlString.Parser, new[]{ "AuthString", "Type", "Str" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Dbp2Any_SqlResponse_Boolean), global::ArmyAntMessage.DBProxy.Dbp2Any_SqlResponse_Boolean.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Dbp2Any_SqlResponse_Counts), global::ArmyAntMessage.DBProxy.Dbp2Any_SqlResponse_Counts.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Dbp2Any_SqlResponse_Tables), global::ArmyAntMessage.DBProxy.Dbp2Any_SqlResponse_Tables.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArmyAntMessage.DBProxy.Dbp2Any_SqlResponse_Error), global::ArmyAntMessage.DBProxy.Dbp2Any_SqlResponse_Error.Parser, new[]{ "Code", "Message" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum SqlRequestType {
    [pbr::OriginalName("DEFAULT")] Default = 0,
    [pbr::OriginalName("SELECT")] Select = 1,
    [pbr::OriginalName("UPDATE")] Update = 2,
    [pbr::OriginalName("DELETE")] Delete = 3,
    [pbr::OriginalName("INSERT")] Insert = 4,
  }

  public enum SqlRequestType_SqlString {
    [pbr::OriginalName("EXECUTEBYSQLSTRING")] Executebysqlstring = 0,
    [pbr::OriginalName("QUERYBYSQLSTRING")] Querybysqlstring = 1,
    [pbr::OriginalName("UPDATEBYSQLSTRING")] Updatebysqlstring = 2,
    [pbr::OriginalName("EXECUTEBYSQLSCRIPT")] Executebysqlscript = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Any2Dbp_LoginRequest : pb::IMessage<Any2Dbp_LoginRequest> {
    private static readonly pb::MessageParser<Any2Dbp_LoginRequest> _parser = new pb::MessageParser<Any2Dbp_LoginRequest>(() => new Any2Dbp_LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Any2Dbp_LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_LoginRequest(Any2Dbp_LoginRequest other) : this() {
      macAddress_ = other.macAddress_;
      ip_ = other.ip_;
      serverTypeChecksum_ = other.serverTypeChecksum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_LoginRequest Clone() {
      return new Any2Dbp_LoginRequest(this);
    }

    /// <summary>Field number for the "mac_address" field.</summary>
    public const int MacAddressFieldNumber = 1;
    private long macAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MacAddress {
      get { return macAddress_; }
      set {
        macAddress_ = value;
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 2;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "server_type_checksum" field.</summary>
    public const int ServerTypeChecksumFieldNumber = 3;
    private string serverTypeChecksum_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerTypeChecksum {
      get { return serverTypeChecksum_; }
      set {
        serverTypeChecksum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Any2Dbp_LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Any2Dbp_LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MacAddress != other.MacAddress) return false;
      if (Ip != other.Ip) return false;
      if (ServerTypeChecksum != other.ServerTypeChecksum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MacAddress != 0L) hash ^= MacAddress.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (ServerTypeChecksum.Length != 0) hash ^= ServerTypeChecksum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MacAddress != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MacAddress);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ip);
      }
      if (ServerTypeChecksum.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServerTypeChecksum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MacAddress != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MacAddress);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (ServerTypeChecksum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerTypeChecksum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Any2Dbp_LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.MacAddress != 0L) {
        MacAddress = other.MacAddress;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.ServerTypeChecksum.Length != 0) {
        ServerTypeChecksum = other.ServerTypeChecksum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MacAddress = input.ReadInt64();
            break;
          }
          case 18: {
            Ip = input.ReadString();
            break;
          }
          case 26: {
            ServerTypeChecksum = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dbp2Any_LoginResponseSuccessful : pb::IMessage<Dbp2Any_LoginResponseSuccessful> {
    private static readonly pb::MessageParser<Dbp2Any_LoginResponseSuccessful> _parser = new pb::MessageParser<Dbp2Any_LoginResponseSuccessful>(() => new Dbp2Any_LoginResponseSuccessful());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dbp2Any_LoginResponseSuccessful> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_LoginResponseSuccessful() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_LoginResponseSuccessful(Dbp2Any_LoginResponseSuccessful other) : this() {
      authString_ = other.authString_;
      currentTime_ = other.currentTime_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_LoginResponseSuccessful Clone() {
      return new Dbp2Any_LoginResponseSuccessful(this);
    }

    /// <summary>Field number for the "auth_string" field.</summary>
    public const int AuthStringFieldNumber = 1;
    private string authString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthString {
      get { return authString_; }
      set {
        authString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_time" field.</summary>
    public const int CurrentTimeFieldNumber = 2;
    private long currentTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentTime {
      get { return currentTime_; }
      set {
        currentTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dbp2Any_LoginResponseSuccessful);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dbp2Any_LoginResponseSuccessful other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthString != other.AuthString) return false;
      if (CurrentTime != other.CurrentTime) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthString.Length != 0) hash ^= AuthString.GetHashCode();
      if (CurrentTime != 0L) hash ^= CurrentTime.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuthString);
      }
      if (CurrentTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CurrentTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthString);
      }
      if (CurrentTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentTime);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dbp2Any_LoginResponseSuccessful other) {
      if (other == null) {
        return;
      }
      if (other.AuthString.Length != 0) {
        AuthString = other.AuthString;
      }
      if (other.CurrentTime != 0L) {
        CurrentTime = other.CurrentTime;
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuthString = input.ReadString();
            break;
          }
          case 16: {
            CurrentTime = input.ReadInt64();
            break;
          }
          case 24: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dbp2Any_LoginResponseFailure : pb::IMessage<Dbp2Any_LoginResponseFailure> {
    private static readonly pb::MessageParser<Dbp2Any_LoginResponseFailure> _parser = new pb::MessageParser<Dbp2Any_LoginResponseFailure>(() => new Dbp2Any_LoginResponseFailure());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dbp2Any_LoginResponseFailure> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_LoginResponseFailure() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_LoginResponseFailure(Dbp2Any_LoginResponseFailure other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_LoginResponseFailure Clone() {
      return new Dbp2Any_LoginResponseFailure(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dbp2Any_LoginResponseFailure);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dbp2Any_LoginResponseFailure other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dbp2Any_LoginResponseFailure other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Any2Dbp_LogoutRequest : pb::IMessage<Any2Dbp_LogoutRequest> {
    private static readonly pb::MessageParser<Any2Dbp_LogoutRequest> _parser = new pb::MessageParser<Any2Dbp_LogoutRequest>(() => new Any2Dbp_LogoutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Any2Dbp_LogoutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_LogoutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_LogoutRequest(Any2Dbp_LogoutRequest other) : this() {
      authString_ = other.authString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_LogoutRequest Clone() {
      return new Any2Dbp_LogoutRequest(this);
    }

    /// <summary>Field number for the "auth_string" field.</summary>
    public const int AuthStringFieldNumber = 1;
    private string authString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthString {
      get { return authString_; }
      set {
        authString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Any2Dbp_LogoutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Any2Dbp_LogoutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthString != other.AuthString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthString.Length != 0) hash ^= AuthString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuthString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Any2Dbp_LogoutRequest other) {
      if (other == null) {
        return;
      }
      if (other.AuthString.Length != 0) {
        AuthString = other.AuthString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuthString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dbp2Any_LogoutResponse : pb::IMessage<Dbp2Any_LogoutResponse> {
    private static readonly pb::MessageParser<Dbp2Any_LogoutResponse> _parser = new pb::MessageParser<Dbp2Any_LogoutResponse>(() => new Dbp2Any_LogoutResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dbp2Any_LogoutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_LogoutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_LogoutResponse(Dbp2Any_LogoutResponse other) : this() {
      result_ = other.result_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_LogoutResponse Clone() {
      return new Dbp2Any_LogoutResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dbp2Any_LogoutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dbp2Any_LogoutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dbp2Any_LogoutResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SqlHeadOne : pb::IMessage<SqlHeadOne> {
    private static readonly pb::MessageParser<SqlHeadOne> _parser = new pb::MessageParser<SqlHeadOne>(() => new SqlHeadOne());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SqlHeadOne> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlHeadOne() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlHeadOne(SqlHeadOne other) : this() {
      length_ = other.length_;
      catalogName_ = other.catalogName_;
      columnName_ = other.columnName_;
      type_ = other.type_;
      allowNum_ = other.allowNum_;
      autoIncrease_ = other.autoIncrease_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlHeadOne Clone() {
      return new SqlHeadOne(this);
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 1;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "catalog_name" field.</summary>
    public const int CatalogNameFieldNumber = 2;
    private string catalogName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CatalogName {
      get { return catalogName_; }
      set {
        catalogName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "column_name" field.</summary>
    public const int ColumnNameFieldNumber = 3;
    private string columnName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ColumnName {
      get { return columnName_; }
      set {
        columnName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "allow_num" field.</summary>
    public const int AllowNumFieldNumber = 5;
    private bool allowNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowNum {
      get { return allowNum_; }
      set {
        allowNum_ = value;
      }
    }

    /// <summary>Field number for the "auto_increase" field.</summary>
    public const int AutoIncreaseFieldNumber = 6;
    private bool autoIncrease_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoIncrease {
      get { return autoIncrease_; }
      set {
        autoIncrease_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SqlHeadOne);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SqlHeadOne other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Length != other.Length) return false;
      if (CatalogName != other.CatalogName) return false;
      if (ColumnName != other.ColumnName) return false;
      if (Type != other.Type) return false;
      if (AllowNum != other.AllowNum) return false;
      if (AutoIncrease != other.AutoIncrease) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Length != 0) hash ^= Length.GetHashCode();
      if (CatalogName.Length != 0) hash ^= CatalogName.GetHashCode();
      if (ColumnName.Length != 0) hash ^= ColumnName.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (AllowNum != false) hash ^= AllowNum.GetHashCode();
      if (AutoIncrease != false) hash ^= AutoIncrease.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Length != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Length);
      }
      if (CatalogName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CatalogName);
      }
      if (ColumnName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ColumnName);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (AllowNum != false) {
        output.WriteRawTag(40);
        output.WriteBool(AllowNum);
      }
      if (AutoIncrease != false) {
        output.WriteRawTag(48);
        output.WriteBool(AutoIncrease);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (CatalogName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CatalogName);
      }
      if (ColumnName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnName);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (AllowNum != false) {
        size += 1 + 1;
      }
      if (AutoIncrease != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SqlHeadOne other) {
      if (other == null) {
        return;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      if (other.CatalogName.Length != 0) {
        CatalogName = other.CatalogName;
      }
      if (other.ColumnName.Length != 0) {
        ColumnName = other.ColumnName;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.AllowNum != false) {
        AllowNum = other.AllowNum;
      }
      if (other.AutoIncrease != false) {
        AutoIncrease = other.AutoIncrease;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Length = input.ReadInt32();
            break;
          }
          case 18: {
            CatalogName = input.ReadString();
            break;
          }
          case 26: {
            ColumnName = input.ReadString();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            AllowNum = input.ReadBool();
            break;
          }
          case 48: {
            AutoIncrease = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SqlRow : pb::IMessage<SqlRow> {
    private static readonly pb::MessageParser<SqlRow> _parser = new pb::MessageParser<SqlRow>(() => new SqlRow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SqlRow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlRow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlRow(SqlRow other) : this() {
      fields_ = other.fields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlRow Clone() {
      return new SqlRow(this);
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_fields_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> fields_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Fields {
      get { return fields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SqlRow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SqlRow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fields_.Equals(other.fields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fields_.WriteTo(output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SqlRow other) {
      if (other == null) {
        return;
      }
      fields_.Add(other.fields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SqlDatabaseInfo : pb::IMessage<SqlDatabaseInfo> {
    private static readonly pb::MessageParser<SqlDatabaseInfo> _parser = new pb::MessageParser<SqlDatabaseInfo>(() => new SqlDatabaseInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SqlDatabaseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlDatabaseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlDatabaseInfo(SqlDatabaseInfo other) : this() {
      name_ = other.name_;
      server_ = other.server_;
      charset_ = other.charset_;
      sortRule_ = other.sortRule_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlDatabaseInfo Clone() {
      return new SqlDatabaseInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "server" field.</summary>
    public const int ServerFieldNumber = 2;
    private string server_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Server {
      get { return server_; }
      set {
        server_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "charset" field.</summary>
    public const int CharsetFieldNumber = 3;
    private string charset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Charset {
      get { return charset_; }
      set {
        charset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sort_rule" field.</summary>
    public const int SortRuleFieldNumber = 4;
    private string sortRule_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SortRule {
      get { return sortRule_; }
      set {
        sortRule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SqlDatabaseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SqlDatabaseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Server != other.Server) return false;
      if (Charset != other.Charset) return false;
      if (SortRule != other.SortRule) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Server.Length != 0) hash ^= Server.GetHashCode();
      if (Charset.Length != 0) hash ^= Charset.GetHashCode();
      if (SortRule.Length != 0) hash ^= SortRule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Server.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Server);
      }
      if (Charset.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Charset);
      }
      if (SortRule.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SortRule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Server.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Server);
      }
      if (Charset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Charset);
      }
      if (SortRule.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SortRule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SqlDatabaseInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Server.Length != 0) {
        Server = other.Server;
      }
      if (other.Charset.Length != 0) {
        Charset = other.Charset;
      }
      if (other.SortRule.Length != 0) {
        SortRule = other.SortRule;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Server = input.ReadString();
            break;
          }
          case 26: {
            Charset = input.ReadString();
            break;
          }
          case 34: {
            SortRule = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SqlTableInfo : pb::IMessage<SqlTableInfo> {
    private static readonly pb::MessageParser<SqlTableInfo> _parser = new pb::MessageParser<SqlTableInfo>(() => new SqlTableInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SqlTableInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlTableInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlTableInfo(SqlTableInfo other) : this() {
      tableName_ = other.tableName_;
      engine_ = other.engine_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlTableInfo Clone() {
      return new SqlTableInfo(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 5;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "engine" field.</summary>
    public const int EngineFieldNumber = 6;
    private string engine_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Engine {
      get { return engine_; }
      set {
        engine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 7;
    private string comment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SqlTableInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SqlTableInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (Engine != other.Engine) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (Engine.Length != 0) hash ^= Engine.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TableName);
      }
      if (Engine.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Engine);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (Engine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Engine);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SqlTableInfo other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.Engine.Length != 0) {
        Engine = other.Engine;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 42: {
            TableName = input.ReadString();
            break;
          }
          case 50: {
            Engine = input.ReadString();
            break;
          }
          case 58: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SqlColumnInfo : pb::IMessage<SqlColumnInfo> {
    private static readonly pb::MessageParser<SqlColumnInfo> _parser = new pb::MessageParser<SqlColumnInfo>(() => new SqlColumnInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SqlColumnInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlColumnInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlColumnInfo(SqlColumnInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlColumnInfo Clone() {
      return new SqlColumnInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SqlColumnInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SqlColumnInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SqlColumnInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SqlResult : pb::IMessage<SqlResult> {
    private static readonly pb::MessageParser<SqlResult> _parser = new pb::MessageParser<SqlResult>(() => new SqlResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SqlResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlResult(SqlResult other) : this() {
      table_ = other.table_ != null ? other.table_.Clone() : null;
      heads_ = other.heads_.Clone();
      rows_ = other.rows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlResult Clone() {
      return new SqlResult(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    private global::ArmyAntMessage.DBProxy.SqlTableInfo table_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ArmyAntMessage.DBProxy.SqlTableInfo Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    /// <summary>Field number for the "heads" field.</summary>
    public const int HeadsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ArmyAntMessage.DBProxy.SqlHeadOne> _repeated_heads_codec
        = pb::FieldCodec.ForMessage(18, global::ArmyAntMessage.DBProxy.SqlHeadOne.Parser);
    private readonly pbc::RepeatedField<global::ArmyAntMessage.DBProxy.SqlHeadOne> heads_ = new pbc::RepeatedField<global::ArmyAntMessage.DBProxy.SqlHeadOne>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ArmyAntMessage.DBProxy.SqlHeadOne> Heads {
      get { return heads_; }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ArmyAntMessage.DBProxy.SqlRow> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(26, global::ArmyAntMessage.DBProxy.SqlRow.Parser);
    private readonly pbc::RepeatedField<global::ArmyAntMessage.DBProxy.SqlRow> rows_ = new pbc::RepeatedField<global::ArmyAntMessage.DBProxy.SqlRow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ArmyAntMessage.DBProxy.SqlRow> Rows {
      get { return rows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SqlResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SqlResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      if(!heads_.Equals(other.heads_)) return false;
      if(!rows_.Equals(other.rows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      hash ^= heads_.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      heads_.WriteTo(output, _repeated_heads_codec);
      rows_.WriteTo(output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      size += heads_.CalculateSize(_repeated_heads_codec);
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SqlResult other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          table_ = new global::ArmyAntMessage.DBProxy.SqlTableInfo();
        }
        Table.MergeFrom(other.Table);
      }
      heads_.Add(other.heads_);
      rows_.Add(other.rows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (table_ == null) {
              table_ = new global::ArmyAntMessage.DBProxy.SqlTableInfo();
            }
            input.ReadMessage(table_);
            break;
          }
          case 18: {
            heads_.AddEntriesFrom(input, _repeated_heads_codec);
            break;
          }
          case 26: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Any2Dbp_SqlRequest_Table : pb::IMessage<Any2Dbp_SqlRequest_Table> {
    private static readonly pb::MessageParser<Any2Dbp_SqlRequest_Table> _parser = new pb::MessageParser<Any2Dbp_SqlRequest_Table>(() => new Any2Dbp_SqlRequest_Table());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Any2Dbp_SqlRequest_Table> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_Table() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_Table(Any2Dbp_SqlRequest_Table other) : this() {
      authString_ = other.authString_;
      type_ = other.type_;
      tableName_ = other.tableName_;
      tableCreateData_ = other.tableCreateData_ != null ? other.tableCreateData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_Table Clone() {
      return new Any2Dbp_SqlRequest_Table(this);
    }

    /// <summary>Field number for the "auth_string" field.</summary>
    public const int AuthStringFieldNumber = 1;
    private string authString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthString {
      get { return authString_; }
      set {
        authString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::ArmyAntMessage.DBProxy.SqlRequestType type_ = 0;
    /// <summary>
    /// Cannot update, insert == create
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ArmyAntMessage.DBProxy.SqlRequestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 3;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "table_create_data" field.</summary>
    public const int TableCreateDataFieldNumber = 4;
    private global::ArmyAntMessage.DBProxy.SqlTableInfo tableCreateData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ArmyAntMessage.DBProxy.SqlTableInfo TableCreateData {
      get { return tableCreateData_; }
      set {
        tableCreateData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Any2Dbp_SqlRequest_Table);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Any2Dbp_SqlRequest_Table other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthString != other.AuthString) return false;
      if (Type != other.Type) return false;
      if (TableName != other.TableName) return false;
      if (!object.Equals(TableCreateData, other.TableCreateData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthString.Length != 0) hash ^= AuthString.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (tableCreateData_ != null) hash ^= TableCreateData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuthString);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (TableName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TableName);
      }
      if (tableCreateData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TableCreateData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthString);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (tableCreateData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableCreateData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Any2Dbp_SqlRequest_Table other) {
      if (other == null) {
        return;
      }
      if (other.AuthString.Length != 0) {
        AuthString = other.AuthString;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.tableCreateData_ != null) {
        if (tableCreateData_ == null) {
          tableCreateData_ = new global::ArmyAntMessage.DBProxy.SqlTableInfo();
        }
        TableCreateData.MergeFrom(other.TableCreateData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuthString = input.ReadString();
            break;
          }
          case 16: {
            type_ = (global::ArmyAntMessage.DBProxy.SqlRequestType) input.ReadEnum();
            break;
          }
          case 26: {
            TableName = input.ReadString();
            break;
          }
          case 34: {
            if (tableCreateData_ == null) {
              tableCreateData_ = new global::ArmyAntMessage.DBProxy.SqlTableInfo();
            }
            input.ReadMessage(tableCreateData_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Any2Dbp_SqlRequest_Select : pb::IMessage<Any2Dbp_SqlRequest_Select> {
    private static readonly pb::MessageParser<Any2Dbp_SqlRequest_Select> _parser = new pb::MessageParser<Any2Dbp_SqlRequest_Select>(() => new Any2Dbp_SqlRequest_Select());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Any2Dbp_SqlRequest_Select> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_Select() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_Select(Any2Dbp_SqlRequest_Select other) : this() {
      authString_ = other.authString_;
      tableName_ = other.tableName_;
      columns_ = other.columns_.Clone();
      clauses_ = other.clauses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_Select Clone() {
      return new Any2Dbp_SqlRequest_Select(this);
    }

    /// <summary>Field number for the "auth_string" field.</summary>
    public const int AuthStringFieldNumber = 1;
    private string authString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthString {
      get { return authString_; }
      set {
        authString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 2;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_columns_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> columns_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "clauses" field.</summary>
    public const int ClausesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_clauses_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> clauses_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Clauses {
      get { return clauses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Any2Dbp_SqlRequest_Select);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Any2Dbp_SqlRequest_Select other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthString != other.AuthString) return false;
      if (TableName != other.TableName) return false;
      if(!columns_.Equals(other.columns_)) return false;
      if(!clauses_.Equals(other.clauses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthString.Length != 0) hash ^= AuthString.GetHashCode();
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      hash ^= columns_.GetHashCode();
      hash ^= clauses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuthString);
      }
      if (TableName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TableName);
      }
      columns_.WriteTo(output, _repeated_columns_codec);
      clauses_.WriteTo(output, _repeated_clauses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthString);
      }
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += columns_.CalculateSize(_repeated_columns_codec);
      size += clauses_.CalculateSize(_repeated_clauses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Any2Dbp_SqlRequest_Select other) {
      if (other == null) {
        return;
      }
      if (other.AuthString.Length != 0) {
        AuthString = other.AuthString;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      columns_.Add(other.columns_);
      clauses_.Add(other.clauses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuthString = input.ReadString();
            break;
          }
          case 18: {
            TableName = input.ReadString();
            break;
          }
          case 26: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
          case 34: {
            clauses_.AddEntriesFrom(input, _repeated_clauses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Any2Dbp_SqlRequest_Update : pb::IMessage<Any2Dbp_SqlRequest_Update> {
    private static readonly pb::MessageParser<Any2Dbp_SqlRequest_Update> _parser = new pb::MessageParser<Any2Dbp_SqlRequest_Update>(() => new Any2Dbp_SqlRequest_Update());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Any2Dbp_SqlRequest_Update> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_Update() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_Update(Any2Dbp_SqlRequest_Update other) : this() {
      authString_ = other.authString_;
      type_ = other.type_;
      tableName_ = other.tableName_;
      columns_ = other.columns_.Clone();
      values_ = other.values_.Clone();
      clauses_ = other.clauses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_Update Clone() {
      return new Any2Dbp_SqlRequest_Update(this);
    }

    /// <summary>Field number for the "auth_string" field.</summary>
    public const int AuthStringFieldNumber = 1;
    private string authString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthString {
      get { return authString_; }
      set {
        authString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::ArmyAntMessage.DBProxy.SqlRequestType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ArmyAntMessage.DBProxy.SqlRequestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 3;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_columns_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> columns_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_values_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> values_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Values {
      get { return values_; }
    }

    /// <summary>Field number for the "clauses" field.</summary>
    public const int ClausesFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_clauses_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> clauses_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Clauses {
      get { return clauses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Any2Dbp_SqlRequest_Update);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Any2Dbp_SqlRequest_Update other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthString != other.AuthString) return false;
      if (Type != other.Type) return false;
      if (TableName != other.TableName) return false;
      if(!columns_.Equals(other.columns_)) return false;
      if(!values_.Equals(other.values_)) return false;
      if(!clauses_.Equals(other.clauses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthString.Length != 0) hash ^= AuthString.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      hash ^= columns_.GetHashCode();
      hash ^= values_.GetHashCode();
      hash ^= clauses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuthString);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (TableName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TableName);
      }
      columns_.WriteTo(output, _repeated_columns_codec);
      values_.WriteTo(output, _repeated_values_codec);
      clauses_.WriteTo(output, _repeated_clauses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthString);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += columns_.CalculateSize(_repeated_columns_codec);
      size += values_.CalculateSize(_repeated_values_codec);
      size += clauses_.CalculateSize(_repeated_clauses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Any2Dbp_SqlRequest_Update other) {
      if (other == null) {
        return;
      }
      if (other.AuthString.Length != 0) {
        AuthString = other.AuthString;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      columns_.Add(other.columns_);
      values_.Add(other.values_);
      clauses_.Add(other.clauses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuthString = input.ReadString();
            break;
          }
          case 16: {
            type_ = (global::ArmyAntMessage.DBProxy.SqlRequestType) input.ReadEnum();
            break;
          }
          case 26: {
            TableName = input.ReadString();
            break;
          }
          case 34: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
          case 42: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
          case 50: {
            clauses_.AddEntriesFrom(input, _repeated_clauses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Any2Dbp_SqlRequest_Column : pb::IMessage<Any2Dbp_SqlRequest_Column> {
    private static readonly pb::MessageParser<Any2Dbp_SqlRequest_Column> _parser = new pb::MessageParser<Any2Dbp_SqlRequest_Column>(() => new Any2Dbp_SqlRequest_Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Any2Dbp_SqlRequest_Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_Column(Any2Dbp_SqlRequest_Column other) : this() {
      authString_ = other.authString_;
      type_ = other.type_;
      tableName_ = other.tableName_;
      columnName_ = other.columnName_;
      columnCreateInfo_ = other.columnCreateInfo_ != null ? other.columnCreateInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_Column Clone() {
      return new Any2Dbp_SqlRequest_Column(this);
    }

    /// <summary>Field number for the "auth_string" field.</summary>
    public const int AuthStringFieldNumber = 1;
    private string authString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthString {
      get { return authString_; }
      set {
        authString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::ArmyAntMessage.DBProxy.SqlRequestType type_ = 0;
    /// <summary>
    /// Cannot update
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ArmyAntMessage.DBProxy.SqlRequestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 3;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "column_name" field.</summary>
    public const int ColumnNameFieldNumber = 4;
    private string columnName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ColumnName {
      get { return columnName_; }
      set {
        columnName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "column_create_info" field.</summary>
    public const int ColumnCreateInfoFieldNumber = 5;
    private global::ArmyAntMessage.DBProxy.SqlColumnInfo columnCreateInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ArmyAntMessage.DBProxy.SqlColumnInfo ColumnCreateInfo {
      get { return columnCreateInfo_; }
      set {
        columnCreateInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Any2Dbp_SqlRequest_Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Any2Dbp_SqlRequest_Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthString != other.AuthString) return false;
      if (Type != other.Type) return false;
      if (TableName != other.TableName) return false;
      if (ColumnName != other.ColumnName) return false;
      if (!object.Equals(ColumnCreateInfo, other.ColumnCreateInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthString.Length != 0) hash ^= AuthString.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (ColumnName.Length != 0) hash ^= ColumnName.GetHashCode();
      if (columnCreateInfo_ != null) hash ^= ColumnCreateInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuthString);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (TableName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TableName);
      }
      if (ColumnName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ColumnName);
      }
      if (columnCreateInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ColumnCreateInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthString);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (ColumnName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnName);
      }
      if (columnCreateInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ColumnCreateInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Any2Dbp_SqlRequest_Column other) {
      if (other == null) {
        return;
      }
      if (other.AuthString.Length != 0) {
        AuthString = other.AuthString;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.ColumnName.Length != 0) {
        ColumnName = other.ColumnName;
      }
      if (other.columnCreateInfo_ != null) {
        if (columnCreateInfo_ == null) {
          columnCreateInfo_ = new global::ArmyAntMessage.DBProxy.SqlColumnInfo();
        }
        ColumnCreateInfo.MergeFrom(other.ColumnCreateInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuthString = input.ReadString();
            break;
          }
          case 16: {
            type_ = (global::ArmyAntMessage.DBProxy.SqlRequestType) input.ReadEnum();
            break;
          }
          case 26: {
            TableName = input.ReadString();
            break;
          }
          case 34: {
            ColumnName = input.ReadString();
            break;
          }
          case 42: {
            if (columnCreateInfo_ == null) {
              columnCreateInfo_ = new global::ArmyAntMessage.DBProxy.SqlColumnInfo();
            }
            input.ReadMessage(columnCreateInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Any2Dbp_SqlRequest_SqlString : pb::IMessage<Any2Dbp_SqlRequest_SqlString> {
    private static readonly pb::MessageParser<Any2Dbp_SqlRequest_SqlString> _parser = new pb::MessageParser<Any2Dbp_SqlRequest_SqlString>(() => new Any2Dbp_SqlRequest_SqlString());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Any2Dbp_SqlRequest_SqlString> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_SqlString() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_SqlString(Any2Dbp_SqlRequest_SqlString other) : this() {
      authString_ = other.authString_;
      type_ = other.type_;
      str_ = other.str_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Any2Dbp_SqlRequest_SqlString Clone() {
      return new Any2Dbp_SqlRequest_SqlString(this);
    }

    /// <summary>Field number for the "auth_string" field.</summary>
    public const int AuthStringFieldNumber = 1;
    private string authString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthString {
      get { return authString_; }
      set {
        authString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::ArmyAntMessage.DBProxy.SqlRequestType_SqlString type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ArmyAntMessage.DBProxy.SqlRequestType_SqlString Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 3;
    private string str_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Str {
      get { return str_; }
      set {
        str_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Any2Dbp_SqlRequest_SqlString);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Any2Dbp_SqlRequest_SqlString other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthString != other.AuthString) return false;
      if (Type != other.Type) return false;
      if (Str != other.Str) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthString.Length != 0) hash ^= AuthString.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Str.Length != 0) hash ^= Str.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuthString);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Str.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Str);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthString);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Str.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Str);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Any2Dbp_SqlRequest_SqlString other) {
      if (other == null) {
        return;
      }
      if (other.AuthString.Length != 0) {
        AuthString = other.AuthString;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Str.Length != 0) {
        Str = other.Str;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuthString = input.ReadString();
            break;
          }
          case 16: {
            type_ = (global::ArmyAntMessage.DBProxy.SqlRequestType_SqlString) input.ReadEnum();
            break;
          }
          case 26: {
            Str = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dbp2Any_SqlResponse_Boolean : pb::IMessage<Dbp2Any_SqlResponse_Boolean> {
    private static readonly pb::MessageParser<Dbp2Any_SqlResponse_Boolean> _parser = new pb::MessageParser<Dbp2Any_SqlResponse_Boolean>(() => new Dbp2Any_SqlResponse_Boolean());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dbp2Any_SqlResponse_Boolean> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_SqlResponse_Boolean() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_SqlResponse_Boolean(Dbp2Any_SqlResponse_Boolean other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_SqlResponse_Boolean Clone() {
      return new Dbp2Any_SqlResponse_Boolean(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dbp2Any_SqlResponse_Boolean);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dbp2Any_SqlResponse_Boolean other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dbp2Any_SqlResponse_Boolean other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dbp2Any_SqlResponse_Counts : pb::IMessage<Dbp2Any_SqlResponse_Counts> {
    private static readonly pb::MessageParser<Dbp2Any_SqlResponse_Counts> _parser = new pb::MessageParser<Dbp2Any_SqlResponse_Counts>(() => new Dbp2Any_SqlResponse_Counts());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dbp2Any_SqlResponse_Counts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_SqlResponse_Counts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_SqlResponse_Counts(Dbp2Any_SqlResponse_Counts other) : this() {
      result_ = other.result_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_SqlResponse_Counts Clone() {
      return new Dbp2Any_SqlResponse_Counts(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_result_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> result_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Result {
      get { return result_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dbp2Any_SqlResponse_Counts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dbp2Any_SqlResponse_Counts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!result_.Equals(other.result_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= result_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      result_.WriteTo(output, _repeated_result_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += result_.CalculateSize(_repeated_result_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dbp2Any_SqlResponse_Counts other) {
      if (other == null) {
        return;
      }
      result_.Add(other.result_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            result_.AddEntriesFrom(input, _repeated_result_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dbp2Any_SqlResponse_Tables : pb::IMessage<Dbp2Any_SqlResponse_Tables> {
    private static readonly pb::MessageParser<Dbp2Any_SqlResponse_Tables> _parser = new pb::MessageParser<Dbp2Any_SqlResponse_Tables>(() => new Dbp2Any_SqlResponse_Tables());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dbp2Any_SqlResponse_Tables> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_SqlResponse_Tables() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_SqlResponse_Tables(Dbp2Any_SqlResponse_Tables other) : this() {
      result_ = other.result_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_SqlResponse_Tables Clone() {
      return new Dbp2Any_SqlResponse_Tables(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ArmyAntMessage.DBProxy.SqlResult> _repeated_result_codec
        = pb::FieldCodec.ForMessage(10, global::ArmyAntMessage.DBProxy.SqlResult.Parser);
    private readonly pbc::RepeatedField<global::ArmyAntMessage.DBProxy.SqlResult> result_ = new pbc::RepeatedField<global::ArmyAntMessage.DBProxy.SqlResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ArmyAntMessage.DBProxy.SqlResult> Result {
      get { return result_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dbp2Any_SqlResponse_Tables);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dbp2Any_SqlResponse_Tables other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!result_.Equals(other.result_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= result_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      result_.WriteTo(output, _repeated_result_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += result_.CalculateSize(_repeated_result_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dbp2Any_SqlResponse_Tables other) {
      if (other == null) {
        return;
      }
      result_.Add(other.result_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            result_.AddEntriesFrom(input, _repeated_result_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dbp2Any_SqlResponse_Error : pb::IMessage<Dbp2Any_SqlResponse_Error> {
    private static readonly pb::MessageParser<Dbp2Any_SqlResponse_Error> _parser = new pb::MessageParser<Dbp2Any_SqlResponse_Error>(() => new Dbp2Any_SqlResponse_Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dbp2Any_SqlResponse_Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArmyAntMessage.DBProxy.SqlRequestReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_SqlResponse_Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_SqlResponse_Error(Dbp2Any_SqlResponse_Error other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dbp2Any_SqlResponse_Error Clone() {
      return new Dbp2Any_SqlResponse_Error(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dbp2Any_SqlResponse_Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dbp2Any_SqlResponse_Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dbp2Any_SqlResponse_Error other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
